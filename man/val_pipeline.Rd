% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/val_pipeline.R
\name{val_pipeline}
\alias{val_pipeline}
\title{Validation: Execute an Assessment Pipeline}
\usage{
val_pipeline(
  ref = c("source", "remote"),
  metric_pkg = "riskmetric",
  deps = c("depends", "suggests"),
  deps_recursive = TRUE,
  val_date = Sys.Date(),
  replace = FALSE,
  out = "dev/riskassessments",
  opt_repos = c(CRAN = paste0("https://packagemanager.posit.co/cran/", Sys.Date()), BioC
    = "https://bioconductor.org/packages/3.21/bioc")
)
}
\arguments{
\item{ref}{Character. Source of the packages. Default is "source". Options
are "source" or "remote".}

\item{metric_pkg}{Character. The package used for metrics. Default is
"riskmetric".}

\item{deps}{Character or NULL. Types of dependencies to consider. Default is
"depends". Options include "depends", "suggests", or NULL.}

\item{deps_recursive}{Logical. Whether to consider dependencies recursively.
Default is TRUE.}

\item{val_date}{Date. The date for validation. Default is the current date.}

\item{replace}{Logical. Whether to replace existing assessments. Default is
FALSE.}

\item{out}{Character. Output directory for assessments. Default is
'dev/riskassessments'.}

\item{opt_repos}{Named character vector. Repositories to use. Default is
opt_repos from config.}
}
\value{
A list containing the validation directory and a data frame of
package assessments.
}
\description{
A pipeline to validate R packages using specific metrics and criteria,
spelled out in the package's config file. This function orchestrates the
reduction of a large set of packages delivered through various sources
(either {riskscore} or a user-provided data set) based one primary &
'exception' criteria. Then, it builds the assessment co-hort using
val_build(), returning a qualified list of packages and all required evidence
needed for provisioning to PPM.
}
