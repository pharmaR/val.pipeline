default:
  remote_only: [withr, VGAM, shinyBS] # withr - crashes, VGAM ran 10 hrs, shinyBS 5 hrs
  approved_pkgs: [] # packages that have been approved manually outside of {val.pipeline} workflow
  decisions_lst: [Low, Medium, High]
  opt_repos: 
    CRAN: https://packagemanager.posit.co/cran/latest
    BioC: https://bioconductor.org/packages/3.21/bioc
    
remote_reduce:
  inherits: default
  downloads_1yr:
    cond:
      # High: ~ 
      High: ~ is.na(.x) | .x < 120000
      Medium: ~ dplyr::between(.x, 120000, 240000)
      Low: ~ .x > 240000
    type: primary
    accept_cats: Low
    promote_min: ~ .x > 80000 # bare minimum needed for promo
    auto_accept: ~ .x > 1000000 # anything above this is gold & doesn't need all the rules
  reverse_dependencies:
    cond:
      # High: ~ is.na(.x)
      High: ~ .x < 2
      Medium: ~ dplyr::between(.x, 2, 10)
      Low: ~ .x > 10
    type: exception
    accept_cats: [Low]
    auto_accept: ~ .x > 50 # anything above this is 'gold' & doesn't need to hit all the rules
  dependencies:
    cond:
      # High: ~ is.na(.x)
      High: ~ .x > 8
      Medium: ~ dplyr::between(.x, 4, 8)
      Low: ~ .x < 4
    type: exception
    accept_cats: [Low, Medium]
  news_current:
    cond:
      # High: ~ is.na(.x)
      High: ~ .x != 1
      Low: ~ .x == 1
    type: exception
    accept_cats: Low
  has_vignettes:
    cond:
      # High: ~ is.na(.x)
      High: ~ .x < 1
      Medium: ~ .x == 1
      Low: ~ .x > 1
    type: exception
    accept_cats: Low
  has_source_control:
    cond:
      # High: ~ is.na(.x)
      High: ~ .x == 0
      Low: ~ .x > 0
    type: exception
    accept_cats: Low
  has_website:
    cond:
      High: ~ .x == 0
      Low: ~ .x > 0
    type: exception
    accept_cats: Low


decide:
  inherits: remote_reduce
  covr_coverage:
    cond:
      High: ~ is.na(.x) | .x < 35
      Medium: ~ dplyr::between(.x, 35, 70)
      Low: ~ .x > 70
    type: primary
    accept_cats: Low
  r_cmd_check_errors: # Pointless as a primary check since CRAN insures no warnings / errors
    cond:
      High: ~ is.na(.x) | .x > 1
      Low: ~ .x == 0
    type: primary
    accept_cats: Low
  r_cmd_check_warnings: # Pointless as a primary check since CRAN insures no warnings / errors
    cond:
      High: ~ is.na(.x) | .x > 1
      Low: ~ .x == 0
    type: primary
    accept_cats: Low
  has_examples:
    cond:
      High: ~ is.na(.x) | .x < 1
      Medium: ~ dplyr::between(.x, 1, 40)
      Low: ~ .x > 40
    type: secondary
    accept_cats: [Low, Medium]
  export_help:
    cond:
      High: ~ is.na(.x) | .x < 1
      Medium: ~ dplyr::between(.x, 1, 40)
      Low: ~ .x > 40
    type: secondary
    accept_cats: [Low, Medium]


# Not used:
  # bugs_status
  # remote_checks
  # size_codebase
  # has_bug_reports_url
  # license
  # has_news
  